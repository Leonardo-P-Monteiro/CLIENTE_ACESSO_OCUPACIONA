# Generated by Django 5.2 on 2025-06-05 20:17

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exam', '0001_initial'),
        ('safety', '0001_initial'),
        ('training', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SpecialActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome da Atividade Especial')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Descrição')),
                ('mandatory', models.CharField(blank=True, choices=[('OBRIGATORIO EM ATIVIDADES ESPECIFICAS', 'Obrigatório em atividades específicas'), ('OBRIGATORIO EM TODAS AS ATIVIDADES', 'Obrigatório em todas as atividades'), ('OBRIGATORIO AO CIRCULAR PELA AREA DE PRODUCAO', 'Obrigatório ao circular pela área de produção'), ('RECOMENDADO', 'Recomendado')], help_text='Esse campo diz respeito se o EPI é                     recomendado ou obrigatório.', max_length=45, null=True, verbose_name='Obrigatoriedade')),
                ('slug', models.SlugField(editable=False, max_length=140, null=True, unique=True)),
                ('epis', models.ManyToManyField(blank=True, to='safety.epi', verbose_name='EPIs Necessários')),
                ('exams_admissional', models.ManyToManyField(blank=True, related_name='sa_exams_admissional', to='exam.exam', verbose_name='Exames Admissionais')),
                ('exams_change_function', models.ManyToManyField(blank=True, related_name='sa_exams_change_function', to='exam.exam', verbose_name='Exames de Mudança de Função')),
                ('exams_dismissal', models.ManyToManyField(blank=True, related_name='sa_exams_dismissal', to='exam.exam', verbose_name='Exames Demissionais')),
                ('exams_periodic', models.ManyToManyField(blank=True, related_name='sa_exams_periodic', to='exam.exam', verbose_name='Exames Periódicos')),
                ('exams_return_work', models.ManyToManyField(blank=True, related_name='sa_exams_return_work', to='exam.exam', verbose_name='Exames de Retorno ao Trabalho')),
                ('trainings', models.ManyToManyField(blank=True, to='training.training', verbose_name='Treinamentos Requeridos')),
            ],
            options={
                'verbose_name': 'Atividade Especial',
                'verbose_name_plural': 'Atividades Especiais',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Function',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome da Função')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição da Função')),
                ('cbo', models.CharField(blank=True, max_length=15, null=True, verbose_name='CBO')),
                ('epi_mandatory', models.CharField(blank=True, choices=[('OBRIGATORIO EM ATIVIDADES ESPECIFICAS', 'Obrigatório em atividades específicas'), ('OBRIGATORIO EM TODAS AS ATIVIDADES', 'Obrigatório em todas as atividades'), ('OBRIGATORIO AO CIRCULAR PELA AREA DE PRODUCAO', 'Obrigatório ao circular pela área de produção'), ('RECOMENDADO', 'Recomendado')], help_text='Define a regra geral de obrigatoriedade de EPI para esta função.', max_length=45, null=True, verbose_name='Obrigatoriedade de EPI')),
                ('slug', models.SlugField(editable=False, max_length=140, null=True, unique=True)),
                ('epis', models.ManyToManyField(blank=True, related_name='functions', to='safety.epi', verbose_name='EPIs Associados à Função')),
                ('exams_admissional', models.ManyToManyField(blank=True, related_name='function_exams_admissional', to='exam.exam', verbose_name='Exames Admissionais')),
                ('exams_change_function', models.ManyToManyField(blank=True, related_name='function_exams_change_function', to='exam.exam', verbose_name='Exames de Mudança de Função')),
                ('exams_dismissal', models.ManyToManyField(blank=True, related_name='function_exams_dismissal', to='exam.exam', verbose_name='Exames Demissionais')),
                ('exams_periodic', models.ManyToManyField(blank=True, related_name='function_exams_periodic', to='exam.exam', verbose_name='Exames Periódicos')),
                ('exams_return_work', models.ManyToManyField(blank=True, related_name='function_exams_return_work', to='exam.exam', verbose_name='Exames de Retorno ao Trabalho')),
                ('trainings', models.ManyToManyField(blank=True, related_name='functions', to='training.training', verbose_name='Treinamentos Requeridos pela Função')),
                ('special_activities', models.ManyToManyField(blank=True, related_name='functions', to='function.specialactivity', verbose_name='Atividades Especiais Associadas')),
            ],
            options={
                'verbose_name': 'Função',
                'verbose_name_plural': 'Funções',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FunctionRiskAccident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_accident', to='function.function')),
                ('risk_accident', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskaccident', verbose_name='Risco de Acidente')),
            ],
            options={
                'verbose_name': 'Risco de Acidente Aplicado à Função',
                'verbose_name_plural': 'Riscos de Acidentes Aplicados à Função',
                'unique_together': {('function', 'risk_accident')},
            },
        ),
        migrations.CreateModel(
            name='FunctionRiskBiological',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_biological', to='function.function')),
                ('risk_biological', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskbiological', verbose_name='Risco Biológico')),
            ],
            options={
                'verbose_name': 'Risco Biológico Ergonômico Aplicado à Função',
                'verbose_name_plural': 'Riscos Biológicos Aplicados à Função',
                'unique_together': {('function', 'risk_biological')},
            },
        ),
        migrations.CreateModel(
            name='FunctionRiskChemical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_chemical', to='function.function')),
                ('risk_chemical', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskchemical', verbose_name='Risco Químico')),
            ],
            options={
                'verbose_name': 'Risco Químico Aplicado à Função',
                'verbose_name_plural': 'Riscos Químicos Aplicados à Função',
                'unique_together': {('function', 'risk_chemical')},
            },
        ),
        migrations.CreateModel(
            name='FunctionRiskErgonomic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_ergonomic', to='function.function')),
                ('risk_ergonomic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskergonomic', verbose_name='Risco Ergonômico')),
            ],
            options={
                'verbose_name': 'Risco Ergonômico Aplicado à Função',
                'verbose_name_plural': 'Riscos Ergonômicos Aplicados à Função',
                'unique_together': {('function', 'risk_ergonomic')},
            },
        ),
        migrations.CreateModel(
            name='FunctionRiskPhysical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_physical', to='function.function')),
                ('risk_physical', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskphysical', verbose_name='Risco Físico')),
            ],
            options={
                'verbose_name': 'Risco Físico Aplicado à Função',
                'verbose_name_plural': 'Riscos Físicos Aplicados à Função',
                'unique_together': {('function', 'risk_physical')},
            },
        ),
        migrations.CreateModel(
            name='SpecialActivityAccident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('risk_accident', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskaccident', verbose_name='Risco de Acidente')),
                ('special_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_accident', to='function.specialactivity')),
            ],
            options={
                'verbose_name': 'Risco de Acidente Aplicado à Atividade Especial',
                'verbose_name_plural': 'Riscos de Acidentes Aplicados à Atividade Especial',
                'unique_together': {('special_activity', 'risk_accident')},
            },
        ),
        migrations.CreateModel(
            name='SpecialActivityBiological',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('risk_biological', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskbiological', verbose_name='Risco Biológico')),
                ('special_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_biological', to='function.specialactivity')),
            ],
            options={
                'verbose_name': 'Risco Biológico Aplicado à Atividade Especial',
                'verbose_name_plural': 'Riscos Biológicos Aplicados à Atividade Especial',
                'unique_together': {('special_activity', 'risk_biological')},
            },
        ),
        migrations.CreateModel(
            name='SpecialActivityChemical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('risk_chemical', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskchemical', verbose_name='Risco Químico')),
                ('special_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_chemical', to='function.specialactivity')),
            ],
            options={
                'verbose_name': 'Risco Químico Aplicado à Atividade Especial',
                'verbose_name_plural': 'Riscos Químicos Aplicados à Atividade Especial',
                'unique_together': {('special_activity', 'risk_chemical')},
            },
        ),
        migrations.CreateModel(
            name='SpecialActivityErgonomic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('risk_ergonomic', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskergonomic', verbose_name='Risco Ergonômico')),
                ('special_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_ergonomic', to='function.specialactivity')),
            ],
            options={
                'verbose_name': 'Risco Ergonômico Aplicado à Atividade Especial',
                'verbose_name_plural': 'Riscos Ergonômicos Aplicados à Atividade Especial',
                'unique_together': {('special_activity', 'risk_ergonomic')},
            },
        ),
        migrations.CreateModel(
            name='SpecialActivityRiskPhysical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expositions', models.ManyToManyField(to='safety.expositionrisk', verbose_name='Tipo de Exposição')),
                ('risk_physical', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='safety.riskphysical', verbose_name='Risco Físico')),
                ('special_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applied_risks_physical', to='function.specialactivity')),
            ],
            options={
                'verbose_name': 'Risco Físico Aplicado à Atividade Especial',
                'verbose_name_plural': 'Riscos Físicos Aplicados à Atividade Especial',
                'unique_together': {('special_activity', 'risk_physical')},
            },
        ),
    ]
